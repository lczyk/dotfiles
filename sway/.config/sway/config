
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
# set $term foot
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
# set $menu dmenu_path | rofi -dmenu | xargs swaymsg exec --

set $background ~/.local/share/backgrounds/dracula.png
set $scripts ~/.config/sway/scripts

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#

# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg /usr/share/backgrounds/Einsamer_Raum_by_Orbite_Lambda.jpg fill
output * bg $background fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output * scale 1.5

# no need to set these here. the opacity is handled by the opacity.sh script
# such that it follows the currenlty focused window (see the link in the
# opacity script

# actuially lets set the base opacity to the same inactive opacity we set in
# the opacity.sh scrpt, to prevent op flickering when toggling between windows.
# probably something to do with race between the script and sway internals.
# this way it does not matter which way around they're set.

# TODO: pass opacity to opacioty.sh as args

# set $opacity 0.9
# for_window [class=".*"] opacity $opacity
# for_window [app_id=".*"] opacity $opacity

# set up the gaps
gaps inner 5
gaps outer 1

# Remove all borders from applications
default_border none

### Idle configuration

set $lock2 'swaylock \
    --daemonize \
    --ignore-empty-password \
    --indicator-caps-lock \
    --indicator-idle-visible \
    --font "UbuntuMono" \
'
# --clock \
# --timestr "%Hh %Mm %Ss"\
# --datestr "%b-%d-%Y" \
# --color 111111 \

# TODO: screen saver after 60s. look into 'idlehint' of swayidle

exec swayidle -w \
    timeout 600 $lock2 \
    timeout 900 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    before-sleep $lock2

# lock on lid close
bindswitch --reload --locked lid:on exec $lock2

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


input "1267:12747:hid-over-i2c_04F3:31CB_Touchpad" {
    dwt enabled
    tap disabled
    natural_scroll enabled
    pointer_accel 0.3
    click_method clickfinger
}

input "type:keyboard" {
    xkb_layout us
    # xkb_variant ,nodeadkeys
    # xkb_options grp:alt_shift_toggle
}


### Media keys

# https://proto.garden/blog/gnome_to_sway.html

set $volume_up XF86AudioRaiseVolume
set $volume_down XF86AudioLowerVolume
set $mute XF86AudioMute

set $brightness_up XF86MonBrightnessUp
set $brightness_down XF86MonBrightnessDown

bindsym $volume_up exec amixer set Master 10%+ toggle on
bindsym $volume_down exec amixer set Master 10%- toggle on
bindsym $mute exec amixer set Master toggle

bindsym $brightness_up exec light -A 10
bindsym $brightness_down exec light -U 10


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+space set $$float enable; exec $term --command $scripts/launcher.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec \
	# swaynag -t warning \
	# -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # onseshot enable floating mode
    set $float disable
    bindsym $mod+g set $$float enable
    for_window [title=".*"] floating $$float; set $$float disable

    # Exit sway with a menu. Launch the terminal in a one-shot floating mode.
    bindsym $mod+Shift+e set $$float enable; exec $term --command $scripts/exit.sh
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    #bindsym $mod+tab focus back_and_forth
    bindsym $mod+tab exec pkill -SIGUSR1 sway-alttab
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    # bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Bind control+I to run the screenshot script in the 'full' mode.
# This will take a screenshot of the entire screen and save it to the
# $SCREENSHOT_DIR directory.

# bindsym Ctrl+Shift+i exec SCREENSHOT_DIR=~/screenshots $scripts/screenshot.sh full > /tmp/screenshot_log 2>&1

# Ctrl+Shift+minus
bindsym Ctrl+underscore exec SCREENSHOT_DIR=~/screenshots $scripts/screenshot.sh window > /tmp/screenshot_log 2>&1
# Ctrl+Shift+plus
bindsym Ctrl+plus exec SCREENSHOT_DIR=~/screenshots $scripts/screenshot.sh area > /tmp/screenshot_log 2>&1

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while $scripts/status.sh --influx; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        focused_workspace #32323200 #32323200 #5c5c5c
        inactive_workspace #323232ff #323232ff #5c5c5c
    }

    font pango:UbuntuMono 11
}

# TODO: these processes do not get claned up on logout (only on restart). add smth to deal with.
exec ~/.cargo/bin/sway-alttab
exec ~/.local/bin/autotiling
exec $scripts/opacity.sh
exec keyd-application-mapper
exec mako --default-timeout 5000

include /etc/sway/config.d/*


